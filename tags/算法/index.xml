<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on NieMinghua-blog</title>
    <link>https://blog.github.io/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on NieMinghua-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jun 2020 20:41:07 +0800</lastBuildDate>
    
	<atom:link href="https://blog.github.io/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>递归</title>
      <link>https://blog.github.io/%E9%80%92%E5%BD%92/</link>
      <pubDate>Wed, 03 Jun 2020 20:41:07 +0800</pubDate>
      
      <guid>https://blog.github.io/%E9%80%92%E5%BD%92/</guid>
      <description>递归定义: ​	方法本身直接或间接的调用方法本身,通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解.
使用注意: ​	在使用递归的时候关键两点 (进口和出口)
要注意递归入口的判断和结束的return返回.一定要注意条件的成立不然可能造成这个函数陷入一个无限调用自己的死循环,造成一些不必要的内存占用
使用场景
在一个操作需要多次循环并且判断条件基本一致的时候可以使用递归来进行.可以提升代码的复用性和降低代码的臃肿</description>
    </item>
    
  </channel>
</rss>