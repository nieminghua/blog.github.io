<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>http协议 on NieMinghua-blog</title>
    <link>https://blog.github.io/tags/http%E5%8D%8F%E8%AE%AE/</link>
    <description>Recent content in http协议 on NieMinghua-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Jul 2020 23:44:06 +0800</lastBuildDate>
    
	<atom:link href="https://blog.github.io/tags/http%E5%8D%8F%E8%AE%AE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>三次握手四次挥手通俗理解</title>
      <link>https://blog.github.io/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3/</link>
      <pubDate>Tue, 21 Jul 2020 23:44:06 +0800</pubDate>
      
      <guid>https://blog.github.io/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3/</guid>
      <description>通俗理解tcp三次挥手四次握手   首先理解tcp与udp的区别. 简单来说tcp是面向连接
生活中的例子就是打电话
udp是面向无连接
举例:写信
  三次握手与四次挥手 三次握手是为了双方准备资源
四次握手是为了双方释放资源
套接字是全双工通信,一个接收一个发送.关闭时必须两个通道全部关闭才算是关闭
  三次握手   client告诉server我要发送数据,让服务器准备好资源
  server告诉client我准备好了,你也要准备好
  client告诉server准备好了
  四次挥手  客户端的应用程序通知TCP数据已经发送完毕时，TCP向服务端发送一个带有FIN附加标记的报文段。 服务端收到这个FIN报文段之后，并不立即用FIN报文段回复客户端，而是先向客户端发送一个确认序号ACK，同时通知自己相应的应用程序：对方要求关闭连接（先发送ACK的目的是为了防止在这段时间内，对方重传FIN报文段）。 服务端的应用程序告诉TCP：我要彻底的关闭连接，TCP向客户端送一个FIN报文段。 客户端收到这个FIN报文段后，向服务端发送一个ACK表示连接彻底释放  </description>
    </item>
    
  </channel>
</rss>